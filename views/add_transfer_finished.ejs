<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/head'); -%>
    <style>
        body {font-family: Arial, Helvetica, sans-serif;}
        
        /* The Modal (background) */
        .modal {
          display: none; /* Hidden by default */
          position: fixed; /* Stay in place */
          z-index: 9999999999999; /* Sit on top */
          padding-top: 100px; /* Location of the box */
          left: 0;
          top: 0;
          width: 100%; /* Full width */
          height: 100%; /* Full height */
          overflow: auto; /* Enable scroll if needed */
          background-color: rgb(0,0,0); /* Fallback color */
          background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
        }
        
        /* Modal Content */
        .modal-content {
          position: relative;
          background-color: #fefefe;
          margin: auto;
          padding: 0;
          border: 1px solid #888;
          width: 50%;
          box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
          -webkit-animation-name: animatetop;
          -webkit-animation-duration: 0.4s;
          animation-name: animatetop;
          animation-duration: 0.4s
        }
        
        /* Add Animation */
        @-webkit-keyframes animatetop {
          from {top:-300px; opacity:0} 
          to {top:0; opacity:1}
        }
        
        @keyframes animatetop {
          from {top:-300px; opacity:0}
          to {top:0; opacity:1}
        }
        
        /* The Close Button */
        .close {
          color: white;
          float: right;
          font-size: 28px;
          font-weight: bold;
        }
        
        .close:hover,
        .close:focus {
          color: #000;
          text-decoration: none;
          cursor: pointer;
        }
        
        .modal-header {
          padding: 2px 16px;
          background-color: rgba(34, 34, 51, 0.705);
          color: white;
        }
        
        .modal-body {padding: 2px 16px;}
        
        .modal-footer {
          padding: 2px 16px;
          background-color: rgba(34, 34, 51, 0.705);
          color: white;
          display: flex;
          justify-content: center;
          display: grid;
            place-items: center;
        }
    </style>
    <script>
        function saveAndContinue() {

            var strTemp = '';
            // var Invoice = document.getElementById("invoice");
            var date = document.getElementById("date");
            var from_warehouse_name = document.getElementById("transfer_from_warehouse");
            // var from_Room_name = document.getElementById("FromRoom_name");

            var to_warehouse_name = document.getElementById("to_warehouse");
            // var to_Room_name = document.getElementById("ToRoom_name");

            var modal = document.getElementById("myModal");

            // if(Invoice.value.length == 0){
            //     strTemp += "Document Number is required. <br>" 
            //     Invoice.style.borderColor = "red";
            //     Invoice.focus()
            // }else{
            //     Invoice.style.borderColor = "";
            // }

            if(date.value.length == 0){
                strTemp += "Date is required. <br>"
                date.style.borderColor = "red";
                date.focus()
            }else{
                date.style.borderColor = "";
            }

            if(from_warehouse_name.value.length == 0){
                strTemp += "From Warehouse is required. <br>"
                from_warehouse_name.style.borderColor = "red";
                from_warehouse_name.focus()
            }else{
                from_warehouse_name.style.borderColor = "";
            }

            // if(from_Room_name.value.length == 0){
            //     strTemp += "From Room  is required. <br>"
            //     from_Room_name.style.borderColor = "red";
            //     from_Room_name.focus()
            // }else{
            //     from_Room_name.style.borderColor = "";
            // }

            if(to_warehouse_name.value.length == 0){
                strTemp += "From Warehouse is required. <br>"
                to_warehouse_name.style.borderColor = "red";
                to_warehouse_name.focus()
            }else{
                to_warehouse_name.style.borderColor = "";
            }

            // if(to_Room_name.value.length == 0){
            //     strTemp += "From Room  is required. <br>"
            //     to_Room_name.style.borderColor = "red";
            //     to_Room_name.focus()
            // }else{
            //     to_Room_name.style.borderColor = "";
            // }

            


    


            var prod_qty = document.getElementsByName("to_prod_qty");
            var x = 1;
            for (let index = 0; index < prod_qty.length; index++) {
                const inputElement  = prod_qty[index];

                if(inputElement.value.length == 0){
                    modal.style.display = "none";
                    strTemp += x + ". Quantity  is required. <br>"
                    inputElement.style.borderColor = "red";
                    inputElement.focus()
                }else{
                    inputElement.style.borderColor = "";
                }
                x++;
            }




            var table = document.getElementById("transfer_tbl_new");
            var noofrow = table.rows.length -2;
            
            if(noofrow == 0){
                strTemp += "Product list is empty. <br>"
                table.style.borderColor = "red";
                document.getElementById("product_code").focus()
            }else{
                table.style.borderColor = "";
            }

            if(strTemp.length > 0){
                modal.style.display = "none";
                Swal.fire(
                'Required ',
                "<h5>" + strTemp + "</h5>",
                'warning'
                )
                return;
            }
  
         document.getElementById("form").submit();
         modal.style.display = "none";
         Swal.fire({
            title: "Loading...",
            html: "Please wait a moment",
            allowOutsideClick: false, 
            })
            Swal.showLoading()
        }
        function clearModalContent() {
            document.getElementById("dateRec").innerHTML = "";
            document.getElementById("houseware").innerHTML = "";
            document.getElementById("moor").innerHTML = "";

            // Clear the table inside the modal
            var modalTable = document.getElementById("purchases_tbl_modal");
            modalTable.innerHTML = "";
        }


          function showConfirmation() {

            clearModalContent();
            
            var html = '';
            var NodeList = document.getElementsByName("product_code3");
            var NodeList2 = document.getElementsByName("prod_name");
            var from_prod_qty = document.getElementsByName("from_prod_qty");
            var from_prod_level = document.getElementsByName("from_prod_level2");

            var to_prod_qty = document.getElementsByName("to_prod_qty");
            var to_prod_level = document.getElementsByName("to_prod_level");

            var unit = document.getElementsByName("unit");
            var batch_code = document.getElementsByName("batch_code");
            var product_date = document.getElementsByName("product_date");
            var expiry_date = document.getElementsByName("expiry_date");


            var nodeVal = '';
            var productName = '';
            var valprod_unit = '';
            var valprod_qty = '';
            var valstock = '';
            for (var x = 0; x < NodeList.length; x++) {
                nodeVal = NodeList[x].value;
                productName = NodeList2[x].value;
                prod_qty = from_prod_qty[x].value;
                frombay = from_prod_level[x].value;

                valunit = unit[x].value;
                valbatch_code = batch_code[x].value;
                valproduct_date = product_date[x].value;
                valexpiry_date = expiry_date[x].value;
                

                toqty = to_prod_qty[x].value;

                const selectedIndex = to_prod_level[x].selectedIndex;
                const selectedValue = to_prod_level[x].value;
                tobay = to_prod_level[x].options[selectedIndex].text;
                // tobay = to_prod_level[x].value;
    

                html += '<tr>';
                html += '<td>';
                html += '<p>' + nodeVal + '</p>';
                html += '</td>';

                html += '<td>';
                html += productName;
                html += '</td>';

                html += '<td>';
                html += prod_qty;
                html += '</td>';

                html += '<td>';
                html += frombay;
                html += '</td>';

                

                html += '<td>';
                html += toqty;
                html += '</td>';

                html += '<td>';
                html += valunit;
                html += '</td>';

                html += '<td>';
                html += valbatch_code;
                html += '</td>';

                html += '<td>';
                html += valproduct_date;
                html += '</td>';

                html += '<td>';
                html += valexpiry_date;
                html += '</td>';

                html += '<td>';
                html += tobay;
                html += '</td>';


                html += '</tr>';
            }

            var htmlfinal = "";
            htmlfinal += '<thead class="thead-primary">';
            htmlfinal += '<tr>';
            htmlfinal += '<th scope="col">Item Code </th>';
            htmlfinal += '<th scope="col">Item Description </th>';
            htmlfinal += '<th colspan="2"><center>FROM</center></th>';
            htmlfinal += '<th colspan="7"><center>To</center></th>';
            htmlfinal += '</tr>';
            htmlfinal += '<tr>';
            htmlfinal += '<th scope="col"></th>';
            htmlfinal += '<th scope="col"></th>';
            htmlfinal += '<th scope="col">In Stock </th>';
            htmlfinal += '<th scope="col">Bin </th>';
            htmlfinal += '<th scope="col">Quantity </th>';
            htmlfinal += '<th scope="col">Unit of Measure</th>';
            htmlfinal += '<th scope="col">Batch Code</th>';
            htmlfinal += '<th scope="col">Production date</th>';
            htmlfinal += '<th scope="col">Expiry date</th>';
            htmlfinal += '<th scope="col">Bin </th>';
            htmlfinal += '</tr>';
            htmlfinal += '</thead>';
            htmlfinal += '<tbody id="tblPage_new_modal">';
            htmlfinal += html;
            htmlfinal += '</tbody>';

            var modal = document.getElementById("myModal");
            var span = document.getElementsByClassName("close")[0];


            modal.style.display = "block";
            span.onclick = function () {
                modal.style.display = "none";
            };

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "block";
                }
            };

  

            var modalContent = document.getElementById("purchases_tbl_modal");
            modalContent.innerHTML = "";

        
            document.getElementById("dateRec").innerHTML = document.getElementById("date").value;
            document.getElementById("houseware").innerHTML = document.getElementById("transfer_from_warehouse").value;
            // document.getElementById("moor").innerHTML = document.getElementById("FromRoom_name").value;

            document.getElementById("to_houseware").innerHTML = document.getElementById("to_warehouse").value;
            // document.getElementById("to_moor").innerHTML = document.getElementById("ToRoom_name").value;

            modalContent.innerHTML = htmlfinal;
            
        }


    </script>
</head>

<body onload="showTextbox()">
    <!--*******************
        Preloader start
    ********************-->
    <div id="preloader">
        <div class="sk-three-bounce">
            <div class="sk-child sk-bounce1"></div>
            <div class="sk-child sk-bounce2"></div>
            <div class="sk-child sk-bounce3"></div>
        </div>
    </div>
    <!--*******************
        Preloader end
    ********************-->

    <!--**********************************
        Main wrapper start
    ***********************************-->
    <div id="main-wrapper">

        <!--**********************************
            Nav header start
        ***********************************-->
        <%- include('./partials/header_logo'); -%>

            <!--**********************************
            Nav header end
        ***********************************-->

            <!--**********************************
            Header start
        ***********************************-->
            <%- include('./partials/header',{titel: "Transfer for Finished Goods"}); -%>

                <!--**********************************
            Header end ti-comment-alt
        ***********************************-->

                <!--**********************************
            Sidebar start
        ***********************************-->
                <%- include('./partials/sidebar'); -%>

                    <!--**********************************
            Sidebar end
        ***********************************-->

                    <!--**********************************
            Content body start
        ***********************************-->
        
                    <div class="content-body">
                        <div class="container-fluid">

                            <!-- row -->
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title"><%= language.add_transfers %> </h4>
                                            <button type="button" class="btn btn-rounded btn-outline-info"
                                                onclick="history.back()"><i class="la la-undo"></i> <%= language.go_back %> </button>
                                        </div>
                                        <div class="card-body">
                                            <div class="form-validation">

                                                <form class="needs-validation" action="/transfer_finished/view/add_transfer"
                                                    method="post" id="form">

                                                    <div class="row mb-3">


                                                        <!-- <div class="col-xl-3 col-sm-6">
                                                            <div class="form-group">
                                                                <label for="invoice_no"> Document Number <span
                                                                        class="text-red"> *</span></label>
                                                                <input type="text" name="invoice" class="form-control" value="<%= invoice %>"
                                                                    id="invoice" readonly>
                                                            </div>
                                                        </div> -->

                                                        

                                                        <div class="col-xl-4 col-sm-6">
                                                            <div class="form-group">
                                                                <label for="invoice_no"><%= language.date %>  <span
                                                                        class="text-red">*</span></label>
                                                                <input type="date" name="date" class="form-control"
                                                                    id="date" required>
                                                            </div>
                                                        </div>


                                                        <div class="col-xl-4 col-sm-6">
                                                            <div class="form-group">
                                                                <label for="invoice_no"><%= language.from_warehouse %>  <span
                                                                        class="text-red">*</span></label>
                                                                <select class="form-control" name="from_warehouse"
                                                                    id="transfer_from_warehouse" onchange="SelectRoom();" required>
                                                                    <option value selected disabled>Select One</option>
                                                                    <% warehouse.forEach((warehouse)=> { %>
                                                                        <option value="<%= warehouse.name %>">
                                                                            <%= warehouse.name %>
                                                                        </option>
                                                                        <% }) %>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        
                                                        
                                                        <div class="col-xl-3 col-sm-6">
                                                            <div class="form-group">
                                                                <label for="invoice_no">From Room<span
                                                                        class="text-red">*</span></label>
                                                                <!-- <select class="form-control" name="FromRoom_name"
                                                                    id="FromRoom_name" onchange="showTextbox()" required>
                                                                 
                                                                </select> -->
                                                                <div id="FromshowRoom">

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-xl-4 col-sm-6">
                                                            <div class="form-group">
                                                                <label for="invoice_no"><%= language.to_warehouse %>  <span
                                                                        class="text-red">*</span></label>
                                                                <select class="form-control" name="to_warehouse"
                                                                    id="to_warehouse" required>
                                                                    <option value selected disabled>Select One</option>
                                                                    <% warehouse.forEach((warehouse)=> { %>
                                                                        <option value="<%= warehouse.name %>">
                                                                            <%= warehouse.name %>
                                                                        </option>
                                                                        <% }) %>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        
                                                        
                        
                                                
                                                    </div>
                                                    
                                                    
                                                    <div class="row mb-3">
                                                        <div class="col-xl-4 col-sm-6">
                                                            <select class="form-control" id="choice-dropdown" onchange="showTextbox()">
                                                                
                                                                <option value="Primary">Please scan the barcode...</option>
                                                        
                                                            </select>
                                                        </div>    
                                                            
                                              
                                                             <div class="col-xl-12" id="primary-textbox" style="display: none;">
                                                                <div class="form-group">
                                                                    <label for="invoice_no">Barcode  <span
                                                                            class="text-red">*</span></label>
                                                                    <input type="text" name="product_code" class="form-control" id="product_code">
                                                                </div>
                                                             </div>
                                                             
                                                             
                                                              <div class="col-xl-12" id="secondary-textbox" style="display: none;">
                                                                <div class="form-group">
                                                                    <label for="invoice_no2">Secondary Barcode  <span
                                                                            class="text-red">*</span></label>
                                                                    <input type="text" name="product_code2" class="form-control" id="product_code2">
                                                                </div>
                                                              </div>


                                                              <div class="col-xl-12" id="product-textbox" style="display: none;">
                                                                <div class="form-group">
                                                                    <label for="invoice_no">Product Barcode  <span
                                                                            class="text-red">*</span></label>
                                                                    <input type="text" name="product_code4" class="form-control" id="product_code4">
                                                                </div>
                                                             </div>
                                                        
                                                    </div>

                                                    <div class="col-xl-12">
                                                        <div class="table-responsive">

                                                            <table class="table primary-table-bordered" id="transfer_tbl_new">
                                                                <thead class="thead-primary">
                                                                    <tr>
                                                                        <th scope="col" colspan="1">Item Code </th>
                                                                        <th scope="col" colspan="1">Item Description </th>
                                                                       
                                                                        <th colspan="3"><center>FROM</center></th>
                                                                        <th colspan="10"><center>To</center></th>
                                                                        
                                                                    </tr>
                                                                   <tr>
                                                                       <th></th>
                                                                       <th></th>
                                                                        <th><%= language.in_stock %> </th>
                                                                        <th>Room </th>
                                                                        <th>Location </th>
                                                                        <th><%= language.quantity %>  </th>
                                                                        <th>Unit of Measure </th>
                                                                        <th>Conversion</th>
                                                                        <th>Batch Code </th>
                                                                        <th>Production date </th>
                                                                        <th>Expiry date </th>
                                                                        <th>Room </th>
                                                                        <th>Location </th>
                                                                        <th>Action </th>
                                                                   
                                                                   </tr>
                                                                        
                                                               
                                                                </thead>
                                                                <tbody id="tblPage_new">
                                                                    
                                                                </tbody>
                                                            </table>

                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col">
                                                            <div class="form-group">
                                                                <label for="note"><%= language.note %> </label>
                                                                <input type="text" class="form-control"
                                                                    placeholder="note" id="note" name="note">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                                <div class="row">
                                                    <button class="btn btn-primary" onclick="showConfirmation()" type="submit"
                                                        id="purchase_submit"  >Pre Finalize </button>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="myModal" class="modal">

                        <!-- Modal content -->
                        <div class="modal-content">
                          <div class="modal-header">
                            <span class="close">&times;</span>
                            <h2>Summary</h2>
                          </div>
                          <div class="modal-body">
                            <table style="width:50%" >
                                <thead>
                                    <tr>
                                        <td>Document Number:</td>
                                        <td><b id="Inv"><%= invoice %></b></td>
                                    </tr>

                                    <tr>
                                        <td>Date received:</td>
                                        <td><b id="dateRec"></b></td>
                                    </tr>
        
                                    <tr>
                                        <td>From Warehouse:</td>
                                        <td><b id="houseware"></b></td>
                                    </tr>
        
                                    <tr>
                                        <td>From Room: </td>
                                        <td><b id="moor"></b></td>
                                    </tr>
        
                                    
        
                                    <tr>
                                        <td>To Warehouse:</td>
                                        <td><b id="to_houseware"></b></td>
                                    </tr>
        
                                    <tr>
                                        <td>To Room:</td>
                                        <td><b id="to_moor"></b></td>
                                    </tr>
                                </thead>
                            </table>
                            
                            
                          </div>
                          <div class="table-responsive">
                            <table class="table primary-table-bordered" style="width:100%" id="purchases_tbl_modal">

                            </table>
                          </div>
                          
                          <div class="modal-footer">
                            <button class="btn btn-primary" onclick="saveAndContinue()">Save and Continue</button>
                          </div>
                        </div>
                      
                    </div>
                    <!--**********************************
            Content body end
        ***********************************-->

                    <!--**********************************
            Footer start
        ***********************************-->
                    <%- include('./partials/footer'); -%>

                        <!--**********************************
            Footer end
        ***********************************-->

    </div>
    <!--**********************************
        Main wrapper end
    ***********************************-->

    <!-- start Toastr -->
    <%- include('./partials/toastr'); -%>
        <!-- End Toastr -->

        <!--**********************************
        Scripts
    ***********************************-->
        <%- include('./partials/script'); -%>
        
        <script>
        function SelectRoom() {
            var variable = document.getElementById("transfer_from_warehouse").value;
            var selectRoom = $('#FromshowRoom');

            $.ajax({
                url: '/warehousemap_Income/Rooms_data',
                method: 'POST',
                data: { warehouse_name: variable },
                success: function (response) {
                    selectRoom.empty();

                    $.each(response, function (index, data) {
                        var roomName = data.room_name;
                        var roomCode = data.room_name;

                        // Create checkbox element instead of option
                        var checkboxElement = $('<input>')
                            .attr('type', 'checkbox')
                            .addClass('form-check-input')
                            .val(roomName)
                            .attr("name", "room_name")
                            .attr("id", "room_data"+index)
                            .attr('roomcode', roomCode);

                        // Create label for the checkbox
                        var labelElement = $('<h5>').text(roomName).prepend(checkboxElement);

                        // Append the label to the container
                        selectRoom.append(labelElement);

                        labelElement.click(function () {
                            checkboxElement.prop('checked', !checkboxElement.prop('checked'));
                        });

                        checkboxElement.click(function (event) {
                            event.stopPropagation();
                        });

                        // BayBin();
                        checkboxElement.click(function () {
                            // BayBin(index);
                        });
                    });
                }
            });
        }
        function SelectRoom2(){
                
                var varibale = document.getElementById("to_warehouse").value;
                var selectRoom = $('#ToRoom_name');

                $.ajax({
                    url: '/warehousemap_Income/Rooms_data', 
                    method: 'POST',
                    data: { warehouse_name: varibale }, 
                    success: function(response) {

                    
                        selectRoom.empty();
                            $.each(response, function(index, data) {
                                var roomName = data.room_name;
                                var roomCode = data.room_name
                                var option = $('<option>').text(roomName).val(roomName).attr('roomcode', roomCode);;
                                selectRoom.append(option);
                            })


                            BayBin();
                            BayBin2();
                    }
                })

                
                
        }
        $(function(){
        var dtToday = new Date();
        
        var month = dtToday.getMonth() + 1;
        var day = dtToday.getDate();
        var year = dtToday.getFullYear();
        if(month < 10)
            month = '0' + month.toString();
        if(day < 10)
            day = '0' + day.toString();
        
        var maxDate = year + '-' + month + '-' + day;
        $('#date').attr('max', maxDate);
    });
        function BayBin2(){
            const FromstorageData = document.querySelectorAll("[id^='from_storage']");
            const FromrakData = document.querySelectorAll("[id^='from_rak']");
            var warehouse = document.getElementById("transfer_from_warehouse").value;
            var room = document.getElementById("FromRoom_name").value;
            // alert(warehouse + " <> " + room)
            // console.log(FromstorageData)
            let outputArray = [];
            if(warehouse == "DRY STORAGE"){
                switch(room){
                    case "Rack A":
                    storage = ["D"];
                    rak = ["A"];
                    break;
                    case "Rack B":
                    storage = ["D"];
                    rak = ["B"];
                    break;
                    case "Shelves":
                    storage = ["D"];
                    rak = ["S"];
                    break;
                    case "Receiving Area":
                    storage = ["D"];
                    rak = ["R"];
                    break;
                }
                
                for (let i = 0; i < FromstorageData.length; i++) {
                    FromstorageData[i].value = storage[0];
                }

                for (let i = 0; i < FromrakData.length; i++) {
                    FromrakData[i].value = rak[0];
                }
            
                
            }else if(warehouse == "COLD STORAGE"){
                switch(room){
                    case "Rack A":
                    storage = ["C"];
                    rak = ["A"];
                    break;
                    case "Rack B":
                    storage = ["C"];
                    rak = ["B"];
                    break;
                    case "Rack C":
                    storage = ["C"];
                    rak = ["C"];
                    break;
                    case "Rack D":
                    storage = ["C"];
                    rak = ["D"];
                    break;
                    case "Rack E":
                    storage = ["C"];
                    rak = ["E"];
                    break;

                    case "Rack F":
                    storage = ["C"];
                    rak = ["F"];
                    break;
                }
                
                for (let i = 0; i < FromstorageData.length; i++) {
                    FromstorageData[i].value = storage[0];
                }

                for (let i = 0; i < FromrakData.length; i++) {
                    FromrakData[i].value = rak[0];
                }
            }
        }

        function BayBin(x){
        const selectlevel= document.querySelectorAll(`select[level="levelOslie"]`);
        var warehouse = document.getElementById("to_warehouse").value;
        var room = document.getElementById("ToRoom_name").value;
        var levels = [];
        let outputArray = [];
        if(warehouse == "DRY GOODS"){
            switch(room){
                case "Rack 1":
                levels = [1, 2, 3, 4, 5, 6, 7, 8,9,10,11,12,13,14,15,16];
                break;
                case "Rack 2":
                levels = [17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32];
                break;
            }
            
            for (let i = 0; i < selectlevel.length; i++) {
                var optionsHtml = '';
                levels.forEach(function (num) {
                     optionsHtml += '<option value="' + num + '">DG' + num + '</option>';
                });
                 selectlevel[i].innerHTML = optionsHtml;
                 document.getElementById("MaxStocks_data"+x).value = "192"
                 document.getElementById("MaxStocks_data2"+x).value = "192"
            }        
            
        }else if(warehouse == "FROZEN GOODS"){
            switch(room){
                case "Rack 1":
                levels = [1, 2, 3, 4, 5, 6, 7, 8, 9];
                break;
                case "Rack 2":
                levels = [10, 11, 12, 13, 14, 15, 16, 17, 18];
                break;
            }
            
            for (let i = 0; i < selectlevel.length; i++) {
                var optionsHtml = '';
                levels.forEach(function (num) {
                     optionsHtml += '<option value="' + num + '">FG' + num + '</option>';
                });
                 selectlevel[i].innerHTML = optionsHtml;
                 document.getElementById("MaxStocks_data"+x).value = "130"
                document.getElementById("MaxStocks_data2"+x).value = "130"
            }        
            
    }
}

            function showTextbox() {
              var dropdown = document.getElementById("choice-dropdown");
              var selectedChoice = dropdown.value;


              var productTextbox = document.getElementById("product-textbox");
              var primaryTextbox = document.getElementById("primary-textbox");
              var secondaryTextbox = document.getElementById("secondary-textbox");
        
              if (selectedChoice === "Product") {
                productTextbox.style.display = "block";
                secondaryTextbox.style.display = "none";
                primaryTextbox.style.display = "none";
                
              } else if (selectedChoice === "Primary") {
                primaryTextbox.style.display = "block";
                secondaryTextbox.style.display = "none";
                productTextbox.style.display = "none";
                document.getElementById("product_code").focus()
              } else if(selectedChoice === "Secondary"){
                primaryTextbox.style.display = "none";
                secondaryTextbox.style.display = "block"
                productTextbox.style.display = "none";
              } else {
                primaryTextbox.style.display = "none";
                secondaryTextbox.style.display = "none";
                productTextbox.style.display = "none";
              }
            }
            


            function ValidationForMaxQTY(i){
                var prod_qty = document.getElementById("to_prod_qty"+i).value;
                var stocks_qty = document.getElementById("MaxStocks_data"+i).value;
                // alert(prod_qty + " <> " + stocks_qty)
                if(parseInt(prod_qty) >  parseInt(stocks_qty)){
                    Swal.fire(
                    'Sorry',
                    'Sorry the maximum quantity has been reached.',
                    'warning'
                    )
                    document.getElementById("to_prod_qty"+i).value = "";
                }
            }



            function checkingWarehouse(i){
                var Level = document.getElementById("to_prod_level"+i).value;
                var warehouse = document.getElementById("to_warehouse").value;
                var rooms = document.getElementById("ToRoom_name").value;
                var Quanity = document.getElementById("to_prod_qty"+i);
                var tempMaxStocks = document.getElementById("MaxStocks_data2"+i).value;
                var productName = document.getElementById("prod_name"+i).value;
                $.ajax({
                    url: '/transfer_finished/CheckingWarehouse', 
                    method: 'POST',
                    data: {   bay: Level , warehouses: warehouse, room: rooms  }, 
                    success: function(response) {

                        if(response.length > 0){
                            $.each(response, function(index, data) {
                            
                                // alert(productName + '==' +  data.name + '&&' + Pallet + '==' + data.pallet)
                                if(productName == data.name && Level == data.bay){

                                    var valQty = Quanity.value
                                    if(isNaN(valQty)){
                                        valQty = 0
                                    }
                                    // const stocksData = parseInt(data.product_stock) - parseInt(Quanity.value);
                                    var stocksData = parseInt(data.product_stock) - parseInt(data.maxProducts);
                                    document.getElementById("MaxStocks_data"+i).value = Math.abs(parseInt(stocksData));
                                    const newVal = document.getElementById("MaxStocks_data"+i).value;
                                    if(parseInt(Quanity.value) > parseInt(newVal)){
                                        if(newVal == 0){
                                            Swal.fire(
                                            'Sorry',
                                            'Sorry the maximum quantity has been reached in this pallet.',
                                            'error'
                                            )
                                            Quanity.value = newVal;
                                        }else{
                                            Swal.fire(
                                            'Information',
                                            'This pallet have ' + data.product_stock + ' quantity  you will allow only ' +  newVal,
                                            'question'
                                            )

                                            Quanity.value = newVal;
                                        }
                                    }


                                }else{
                                    Swal.fire(
                                    'Sorry',
                                    'Sorry the pallet already occupied.',
                                    'warning'
                                    )
                                    Quanity.value = "";
                                    // document.getElementById("to_prod_pallet"+i).value = "";
                                    document.getElementById("MaxStocks_data"+i).value = parseInt(tempMaxStocks);
                                }
                                
                            })

                        }else{
                            
                            document.getElementById("MaxStocks_data"+i).value = parseInt(tempMaxStocks);
                            // alert(tempMaxStocks)
                        }
                        
                    }
                })

            }

            function removeSelfRow(event) {
       
                var row = $(event.target).closest('tr');
                
                row.remove();
            }

            $(document).on('click', 'button#remove', function(event) {
                removeSelfRow(event);
            });



            function ComputeConversion(x, c){
                var stock = document.getElementById("from_prod_qty"+x);
                var unit = document.getElementById("unit"+x);
                var to_prod_qty = document.getElementById("to_prod_qty"+x);
                var prod_cat = document.getElementById("prod_cat"+x);
                var Primary_Units = document.getElementById("primary_unit"+x).value;
                var Secondary_units = document.getElementById("secondary_unit"+x).value;
    
                var TotalQtyStock =0;
                var UOM;
                TotalQtyStock = stock.value;
                UOM = Primary_Units;
                if(prod_cat.value == "S"){
                    TotalQtyStock = stock.value * c;
                    UOM = Secondary_units;
                }
                stock.value = TotalQtyStock;
                unit.value = UOM;
                
            }

            function ComputeConversionI(x, c){
                var stock = document.getElementById("from_prod_qty"+x);
                var unit = document.getElementById("unit"+x);
                var to_prod_qty = document.getElementById("to_prod_qty"+x);
                var prod_cat = document.getElementById("prod_cat"+x);
                var Primary_Units = document.getElementById("primary_unit"+x).value;
                var Secondary_units = document.getElementById("secondary_unit"+x).value;
                var New_Qty_Converted = document.getElementById("New_Qty_Converted"+x);
                var Conver = document.getElementById("Conver"+x)
    
                var TotalQtyStock =0;
                var UOM;
                var TotalQtyAdjustment = 0;
                var TotalConver ;

                TotalQtyStock = to_prod_qty.value;
                TotalQtyAdjustment = to_prod_qty.value;
                TotalConver = TotalQtyAdjustment*c + " " + Secondary_units
               
                if(prod_cat.value == "S"){
                    TotalQtyStock = to_prod_qty.value / c;
                    TotalQtyAdjustment = to_prod_qty.value / c
                    TotalConver = TotalQtyAdjustment + " " + Primary_Units
                }
                New_Qty_Converted.value = TotalQtyStock;
                Conver.value = TotalConver;
                // stock.value = TotalQtyStock;
                // unit.value = UOM;
                // console.log(TotalQtyAdjustment + " <> " + adjust_qty + " <> " + c )
            }


            function RoomProducts(x){
                var varibale = document.getElementById("to_warehouse").value;
                var RoomAssigned =  $('#ToRoomAssigned'+x+''); //document.getElementById("ToRoomAssigned"+x);

                
                $.ajax({
                    url: '/warehousemap_Income/Rooms_data', 
                    method: 'POST',
                    data: { warehouse_name: varibale }, 
                    success: function(response) {
                        console.log(response)
                    
                        RoomAssigned.empty();
                            $.each(response, function(index, data) {
                                var roomName = data.room_name;
                                var roomCode = data.room_name
                                var option = $('<option>').text(roomName).val(roomName).attr('roomcode', roomCode);
                                RoomAssigned.append(option);
                            })
    
                            roomdataselected(x);
                            // BayBin();
                            // BayBin2();
                    }
                })



            }

            function roomdataselected(x){
                var warehouse = document.getElementById("to_warehouse").value
                var room = document.getElementById("ToRoomAssigned"+x).value;
                var location12 = document.getElementById("to_prod_level"+x);
                var levels = [];
                let outputArray = [];
                
                if(warehouse == "TAGUIG"){
                    
                    switch(room){
                        case "1":
                        levels = [
                            {
                                "start": 1,
                                "end": 16,
                                "row": 1,
                                "letter": "A"
                            },
                            {
                                "start": 17,
                                "end": 38,
                                "row": 1,
                                "letter": "B"
                            },
                            {
                                "start": 39,
                                "end": 60,
                                "row": 1,
                                "letter": "C"
                            },
                            {
                                "start": 61,
                                "end": 76,
                                "row": 1,
                                "letter": "D"
                            },
                            {
                                "start": 77,
                                "end": 92,
                                "row": 1,
                                "letter": "E"
                            },
                            {
                                "start": 93,
                                "end": 108,
                                "row": 1,
                                "letter": "F"
                            },
                            {
                                "start": 109,
                                "end": 124,
                                "row": 1,
                                "letter": "G"
                            },
                            {
                                "start": 125,
                                "end": 150,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 151,
                                "end": 176,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 177,
                                "end": 202,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;

                        case "2":
                        levels = [
                            {
                                "start": 203,
                                "end": 226,
                                "row": 1,
                                "letter": "B"
                            },
                            {
                                "start": 227,
                                "end": 250,
                                "row": 1,
                                "letter": "C"
                            },
                            {
                                "start": 251,
                                "end": 266,
                                "row": 1,
                                "letter": "D"
                            },
                            {
                                "start": 267,
                                "end": 282,
                                "row": 1,
                                "letter": "E"
                            },
                            {
                                "start": 283,
                                "end": 298,
                                "row": 1,
                                "letter": "F"
                            },
                            {
                                "start": 299,
                                "end": 314,
                                "row": 1,
                                "letter": "G"
                            },
                            {
                                "start": 315,
                                "end": 340,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 341,
                                "end": 366,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 367,
                                "end": 392,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;


                        case "3":
                        levels = [
                            {
                                "start": 393,
                                "end": 416,
                                "row": 1,
                                "letter": "B"
                            },
                            {
                                "start": 417,
                                "end": 440,
                                "row": 1,
                                "letter": "C"
                            },
                            {
                                "start": 441,
                                "end": 458,
                                "row": 1,
                                "letter": "D"
                            },
                            {
                                "start": 459,
                                "end": 476,
                                "row": 1,
                                "letter": "E"
                            },
                            {
                                "start": 477,
                                "end": 494,
                                "row": 1,
                                "letter": "F"
                            },
                            {
                                "start": 495,
                                "end": 512,
                                "row": 1,
                                "letter": "G"
                            },
                            {
                                "start": 513,
                                "end": 538,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 539,
                                "end": 563,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 564,
                                "end": 589,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;

                        case "3":
                        levels = [
                            {
                                "start": 393,
                                "end": 416,
                                "row": 1,
                                "letter": "B"
                            },
                            {
                                "start": 417,
                                "end": 440,
                                "row": 1,
                                "letter": "C"
                            },
                            {
                                "start": 441,
                                "end": 458,
                                "row": 1,
                                "letter": "D"
                            },
                            {
                                "start": 459,
                                "end": 476,
                                "row": 1,
                                "letter": "E"
                            },
                            {
                                "start": 477,
                                "end": 494,
                                "row": 1,
                                "letter": "F"
                            },
                            {
                                "start": 495,
                                "end": 512,
                                "row": 1,
                                "letter": "G"
                            },
                            {
                                "start": 513,
                                "end": 538,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 539,
                                "end": 563,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 564,
                                "end": 589,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;

                        case "4":
                        levels = [
                            {
                                "start": 590,
                                "end": 607,
                                "row": 1,
                                "letter": "D"
                            },
                            {
                                "start": 608,
                                "end": 625,
                                "row": 1,
                                "letter": "E"
                            },
                            {
                                "start": 626,
                                "end": 643,
                                "row": 1,
                                "letter": "F"
                            },
                            {
                                "start": 644,
                                "end": 661,
                                "row": 1,
                                "letter": "G"
                            },
                            {
                                "start": 662,
                                "end": 689,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 690,
                                "end": 716,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 717,
                                "end": 744,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;

                        case "5":
                        levels = [
                            {
                                "start": 745,
                                "end": 762,
                                "row": 1,
                                "letter": "D"
                            },
                            {
                                "start": 763,
                                "end": 780,
                                "row": 1,
                                "letter": "E"
                            },
                            {
                                "start": 781,
                                "end": 798,
                                "row": 1,
                                "letter": "F"
                            },
                            {
                                "start": 799,
                                "end": 816,
                                "row": 1,
                                "letter": "G"
                            },
                            {
                                "start": 817,
                                "end": 844,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 845,
                                "end": 871,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 872,
                                "end": 899,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;

                        case "6":
                        levels = [
                            {
                                "start": 899,
                                "end": 926,
                                "row": 1,
                                "letter": "H"
                            },
                            {
                                "start": 927,
                                "end": 953,
                                "row": 1,
                                "letter": "I"
                            },
                            {
                                "start": 954,
                                "end": 981,
                                "row": 1,
                                "letter": "J"
                            }
                        ];
                        break;

                        case "AISLE":
                levels = [
                    {
                        "start": 1,
                        "end": 16,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 17,
                        "end": 32,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 39,
                        "end": 60,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 61,
                        "end": 76,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 77,
                        "end": 92,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 93,
                        "end": 108,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 109,
                        "end": 124,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 135,
                        "end": 150,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 151,
                        "end": 176,
                        "row": 1,
                        "letter": "A"
                    },
                    {
                        "start": 177,
                        "end": 202,
                        "row": 1,
                        "letter": "A"
                    },
                
                ];
                break;
                    }
                    
                        let optionsHtml = "";
                        levels.forEach((data, index) => {
                            for(let x = data.start; x <= data.end; x++){
                                // console.log(data.letter + " <> " + x)
                                optionsHtml += '<option value="'+data.letter+ x + '">'+data.letter+ x + '</option>';
                            }
                        });
                        location12.innerHTML = optionsHtml;
                    
                }

            }
            //Primary
            $(document).ready(function() {
                var x = 1;
                $('#product_code').on('keydown', function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    return false;
                    }
                });
                
            $('#product_code').on('input', function() {
                var primarycode = $(this).val();
                var FromWarehouse_data = $('#transfer_from_warehouse').val();
                var FromRooms_data = $('#FromRoom_name').val();
                var isProductExists = false;

                var valCatwars ;
                if(FromWarehouse_data == "DRY GOODS"){
                    valCatwars = "DG";
                }else{
                    valCatwars = "FG";
                }
                $('#tblPage_new tr').each(function() {
                var existingProductCode = $(this).find('td:nth-child(2)').text();
                if (existingProductCode === primarycode) {
                    isProductExists = true;
                    return false;
                }
                });
                
                if (!isProductExists) {

                    var rooms_data = document.getElementsByName("room_name");
                    var RoomAssign = [];

                    for (let index = 0; index < rooms_data.length; index++) {
                        const element = rooms_data[index];

                        if (element.checked) {
                            RoomAssign.push(element.value);
                        }
                    }

                    var output = RoomAssign.join(',');
                
                $.ajax({
                    url: '/transfer_finished/barcode_scanner', 
                    method: 'POST',
                    data: { primary_code: primarycode, FromWareHouse: FromWarehouse_data,  FromRoom: FromRooms_data, Roomslist:output }, // Pass the product code as a parameter
                    success: function(response) {
                    
                    $.each(response, function(index, data1) {
                    data1.forEach((data) => {
                    if(data.instock > 0){
                        var row = $('<tr>');
                        const levelData = data.level === null ? 0 : data.level;
                        const isleData =  data.isle === null ? 0 : data.isle;
                        const palletData =  data.pallet === null ? 0 : data.pallet;  
                        // var Invoice_num = document.getElementById("invoice").value;
                        
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 125px;" name="product_code3" id="product_code3'+ x +'" value="' + data.product_code + '" readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 355px;" name="prod_name" id="prod_name'+ x +'" value="' + data.name + '" readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 150px;" name="from_prod_qty" id="from_prod_qty'+x+'" value="' + data.instock + '" readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 150px;" name="RoomAssigned" id="RoomAssigned'+x+'" value="'+data.roomNamed+'" readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 150px;" name="from_prod_level2" value="' + data.level+data.bay + '" readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 150px;" name="to_prod_qty" id="to_prod_qty'+ x +'" onkeyup="ValidationForMaxQTY('+ x +'); ComputeConversionI('+x+', '+data.maxPerUnit+');"  >'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 150px;" name="unit" id="unit'+x+'" value="" readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 150px;" name="Conver" id="Conver'+x+'" value=""  readonly>'));
                        row.append($('<td>').html('<input type="text" class="form-control" style="width: 125px;" name="batch_code" value="'+data.batch_code+'" readonly>'));
                        row.append($('<td>').html('<input type="date" class="form-control" style="width: 150px;" name="product_date" value="'+data.production_date+'" readonly>'));
                        row.append($('<td>').html('<input type="date" class="form-control" style="width: 150px;" name="expiry_date" value="'+data.expiry_date+'" readonly>'));
                        row.append($('<td>').html('<select class="form-control" name="ToRoomAssigned" id="ToRoomAssigned' + x + '" onchange="roomdataselected('+x+')" style="width: 150px;"></select>'));
                        row.append($('<td>').html('<select class="form-control" name="to_prod_level" level="levelOslie" id="to_prod_level' + x + '" style="width: 150px;" onchange="checkingWarehouse('+x+')"></select>'));
                        row.append($('<td>').html('<button type="button" class="btn btn-square btn-outline-danger" id="remove">Remove</button>'));
                        


                        $('<input>').attr({
                            type: 'hidden',
                            id: 'from_prod_level',
                            name: 'from_prod_level',
                            value: levelData
                        }).appendTo(row);
                        
                        $('<input>').attr({
                            type: 'hidden',
                            id: 'primary_code',
                            name: 'primary_code',
                            value: data.primary_code
                        }).appendTo(row);
                        
                        $('<input>').attr({
                            type: 'hidden',
                            id: 'secondary_code',
                            name: 'secondary_code',
                            value: data.secondary_code
                        }).appendTo(row);


                        $('<input>').attr({
                            type: 'hidden',
                            id: 'primary_unit'+x,
                            name: 'primary_unit',
                            value: data.unit
                        }).appendTo(row);
                        
                        
                        $('<input>').attr({
                            type: 'hidden',
                            id: 'secondary_unit'+x,
                            name: 'secondary_unit',
                            value: data.secondary_unit
                        }).appendTo(row);


                        $('<input>').attr({
                            type: 'hidden',
                            id: 'MaxStocks_data'+x,
                            name: 'MaxStocks_data',
                            value: data.maxProducts
                        }).appendTo(row);


                        $('<input>').attr({
                            type: 'hidden',
                            id: 'MaxStocks_data2'+x,
                            name: 'MaxStocks_data2',
                            value: data.maxProducts
                        }).appendTo(row);


                        $('<input>').attr({
                            type: 'hidden',
                            id: 'storage',
                            name: 'storage',
                            value: data.storage
                        }).appendTo(row);

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'rak',
                            name: 'rak',
                            value: data.rack
                        }).appendTo(row);

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'from_storage',
                            name: 'from_storage',
                            value: ""
                        }).appendTo(row);

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'from_rak',
                            name: 'from_rak',
                            value: ""
                        }).appendTo(row);

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'maxPerUnit',
                            name: 'maxPerUnit',
                            value: data.maxPerUnit
                        }).appendTo(row);



                        $('<input>').attr({
                            type: 'hidden',
                            id: 'prod_cat'+x,
                            name: 'prod_cat',
                            value: data.prod_cat
                        }).appendTo(row);

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'New_Qty_Converted'+x,
                            name: 'New_Qty_Converted',
                            value: ""
                        }).appendTo(row);


                        $('<input>').attr({
                            type: 'hidden',
                            id: 'from_invoice'+x,
                            name: 'from_invoice',
                            value: data.invoice
                        }).appendTo(row);


                        // $('<input>').attr({
                        //     type: 'hidden',
                        //     id: 'to_invoice'+x,
                        //     name: 'to_invoice',
                        //     value: Invoice_num
                        // }).appendTo(row);

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'id_transaction'+x,
                            name: 'id_transaction',
                            value: data._id
                        }).appendTo(row);


                        


                        
                        $('#tblPage_new').append(row);
                        ComputeConversion(x, data.maxPerUnit)
                        RoomProducts(x);
       
                        // BayBin(x);
                        // BayBin2();
                        x++;
                    }
                    
                    })
                    });
                    
                    // Clear the product code input field
                    $("#product_code").val('');
                    },
                    error: function(xhr, status, error) {
                        $("#product_code").val('');
                        Swal.fire(
                        '',
                        'We were unable to locate the barcode you entered. Please try scanning another barcode.',
                        'warning'
                        )
                    }
                });
                }
            });
            });

           
        </script>

            <!--**********************************
        Scripts end
    ***********************************-->
</body>

</html>